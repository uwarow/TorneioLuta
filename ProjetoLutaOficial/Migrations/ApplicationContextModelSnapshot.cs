// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoLutaOficial.Data;
using ProjetoLutaOficial.Models;

#nullable disable

namespace ProjetoLutaOficial.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoLutaOficial.Models.Lutador", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int>("ArtesMarciais")
                        .HasColumnType("INT");

                    b.Property<int>("Derrotas")
                        .HasColumnType("INT");

                    b.Property<int>("Idade")
                        .HasColumnType("INT");

                    b.Property<int>("Lutas")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<bool>("Selecionado")
                        .HasColumnType("BIT");

                    b.Property<int>("Vitorias")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.ToTable("Lutadores", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
